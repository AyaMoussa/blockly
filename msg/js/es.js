// This file was automatically generated.  Do not modify.

'use strict';

goog.provide('Blockly.Msg.es');

goog.require('Blockly.Msg');

Blockly.Msg.ACTIVITY_TOOLTIP = "Marker for an additional activity.";  // untranslated
Blockly.Msg.ACTOR_HELP = "This block can be used as a placeholder for any device that requires electricity, e.g. light bulb or LED.";  // untranslated
Blockly.Msg.ACTOR_HELPURL = "https://mp-devel.iais.fraunhofer.de/wiki/x/CwA-/";  // untranslated
Blockly.Msg.ACTOR_TOOLTIP = "Represents any actor.";  // untranslated
Blockly.Msg.ADD_COMMENT = "Añadir comentario";
Blockly.Msg.AUTH = "Autoriza a esta aplicación para guardar tu trabajo y permitir que lo compartas.";
Blockly.Msg.BRICKLIGHT = "EV3 brick light";  // untranslated
Blockly.Msg.BRICKLIGHT_COLOR = "colour";  // untranslated
Blockly.Msg.BRICKLIGHT_DOUBLE_FLASH = "double flashing";  // untranslated
Blockly.Msg.BRICKLIGHT_FLASH = "flashing";  // untranslated
Blockly.Msg.BRICKLIGHT_GREEN = "green";  // untranslated
Blockly.Msg.BRICKLIGHT_OFF_HELP = "Turn of the lights of the EV3 buttons.";  // untranslated
Blockly.Msg.BRICKLIGHT_OFF_HELPURL = "https://mp-devel.iais.fraunhofer.de/wiki/x/CwA-/";  // untranslated
Blockly.Msg.BRICKLIGHT_OFF_TOOLTIP = "Turns EV3 bricklight off.";  // untranslated
Blockly.Msg.BRICKLIGHT_ON = "on";  // untranslated
Blockly.Msg.BRICKLIGHT_ON_HELP = "You can choose which the color of the light for the keys, also you can choose the key lights to be lit or blinking.";  // untranslated
Blockly.Msg.BRICKLIGHT_ON_HELPURL = "https://mp-devel.iais.fraunhofer.de/wiki/x/CwA-/";  // untranslated
Blockly.Msg.BRICKLIGHT_ON_TOOLTIP = "Turns EV3 bricklight on.";  // untranslated
Blockly.Msg.BRICKLIGHT_ORANGE = "orange";  // untranslated
Blockly.Msg.BRICKLIGHT_RED = "red";  // untranslated
Blockly.Msg.BRICKLIGHT_RESET_HELP = "Reset the light settings of the EV3 buttons.";  // untranslated
Blockly.Msg.BRICKLIGHT_RESET_HELPURL = "https://mp-devel.iais.fraunhofer.de/wiki/x/CwA-/";  // untranslated
Blockly.Msg.BRICKLIGHT_RESET_TOOLTIP = "Resets EV3 bricklight. Sets the default EV3 bricklight: green and blinking.";  // untranslated
Blockly.Msg.BRICK_TRACK_WIDTH = "track width";  // untranslated
Blockly.Msg.BRICK_WHEEL_DIAMETER = "wheel diameter";  // untranslated
Blockly.Msg.BUTTON_DO_DELETE = "Delete";  // untranslated
Blockly.Msg.BUTTON_DO_SHARE = "Share";  // untranslated
Blockly.Msg.BUTTON_EMPTY_LIST = "Empty list";  // untranslated
Blockly.Msg.BUTTON_FINISH = "Finish";  // untranslated
Blockly.Msg.BUTTON_LOAD = "Load";  // untranslated
Blockly.Msg.BUTTON_REFRESH = "Refresh";  // untranslated
Blockly.Msg.BUTTON_STOP = "Stop";  // untranslated
Blockly.Msg.CHANGE_VALUE_TITLE = "Cambiar el valor:";
Blockly.Msg.CHAT = "¡Chatea con tu colaborador escribiendo en este cuadro!";
Blockly.Msg.CLEAN_UP = "Limpiar los bloques";
Blockly.Msg.COLLAPSE_ALL = "Contraer bloques";
Blockly.Msg.COLLAPSE_BLOCK = "Contraer bloque";
Blockly.Msg.COLOUR_BLEND_COLOUR1 = "color 1";
Blockly.Msg.COLOUR_BLEND_COLOUR2 = "color 2";
Blockly.Msg.COLOUR_BLEND_HELPURL = "http://meyerweb.com/eric/tools/color-blend/";  // untranslated
Blockly.Msg.COLOUR_BLEND_RATIO = "proporción";
Blockly.Msg.COLOUR_BLEND_TITLE = "combinar";
Blockly.Msg.COLOUR_BLEND_TOOLTIP = "Combina dos colores con una proporción determinada (0,0–1,0).";
Blockly.Msg.COLOUR_GETMODE_TOOLTIP = "Gets the mode of the colour sensor.";  // untranslated
Blockly.Msg.COLOUR_GETSAMPLE_TOOLTIP = "Gets the current reading from the colour sensor.";  // untranslated
Blockly.Msg.COLOUR_HELP = "The color sensor detects colors, but also the light intensity in the environment or different gray values from black to white. Thus it is well-suited for line following robots.";  // untranslated
Blockly.Msg.COLOUR_HELPURL = "https://mp-devel.iais.fraunhofer.de/wiki/x/CwA-/";  // untranslated
Blockly.Msg.COLOUR_PICKER_HELPURL = "https://es.wikipedia.org/wiki/Color";
Blockly.Msg.COLOUR_PICKER_TOOLTIP = "Elige un color de la paleta.";
Blockly.Msg.COLOUR_RANDOM_HELPURL = "http://randomcolour.com";  // untranslated
Blockly.Msg.COLOUR_RANDOM_TITLE = "color aleatorio";
Blockly.Msg.COLOUR_RANDOM_TOOLTIP = "Elige un color al azar.";
Blockly.Msg.COLOUR_RGB_BLUE = "azul";
Blockly.Msg.COLOUR_RGB_GREEN = "verde";
Blockly.Msg.COLOUR_RGB_HELPURL = "http://www.december.com/html/spec/colorper.html";  // untranslated
Blockly.Msg.COLOUR_RGB_RED = "rojo";
Blockly.Msg.COLOUR_RGB_TITLE = "colorear con";
Blockly.Msg.COLOUR_RGB_TOOLTIP = "Crea un color con cantidades específicas de rojo, verde y azul. Todos los valores deben encontrarse entre 0 y 100.";
Blockly.Msg.COLOUR_SETMODE_TOOLTIP = "Sets the mode of the colour sensor.";  // untranslated
Blockly.Msg.COLOUR_TOOLTIP = "Represents EV3 colour sensor.";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_LEFT_MISSING = "Left motor missing in the configuration!";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_LEFT_UNREGULATED = "Left motor is not regulated!";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_MISSING = "Motor is missing on the given port!";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_RIGHT_MISSING = "Right motor missing in the configuration!";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_MOTOR_RIGHT_UNREGULATED = "Right motor is not regulated!";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_SENSOR_MISSING = "This sensor is not set to the port!";  // untranslated
Blockly.Msg.CONFIGURATION_ERROR_SENSOR_WRONG = "Connected wrong sesnor to the given port!";  // untranslated
Blockly.Msg.CONNECT = "connect to robot name";  // untranslated
Blockly.Msg.CONNECTION_RECEIVE_HELP = "This block is waiting for a message from the robot which you declare in the connection. The output of this block is a text message.";  // untranslated
Blockly.Msg.CONNECTION_RECEIVE_HELPURL = "https://mp-devel.iais.fraunhofer.de/wiki/x/CwA-/";  // untranslated
Blockly.Msg.CONNECTION_RECEIVE_TOOLTIP = "Waits for a message from the robot which you declare in the connection.";  // untranslated
Blockly.Msg.CONNECTION_SEND_HELP = "You can send a text message to another robot with this block. Add the text message to the block and also do not forget to add the name of the connection to know where to send the message.";  // untranslated
Blockly.Msg.CONNECTION_SEND_HELPURL = "https://mp-devel.iais.fraunhofer.de/wiki/x/CwA-/";  // untranslated
Blockly.Msg.CONNECTION_START_HELP = "This block tries to make a connection to another robot via bluetooth. It is looking for a robot with the name in the textfield. This block returns the connection, best you save it in a global variable of the type »Connection«. Once the other robot is accepting the connection you can exchange messages with it.";  // untranslated
Blockly.Msg.CONNECTION_START_HELPURL = "https://mp-devel.iais.fraunhofer.de/wiki/x/CwA-/";  // untranslated
Blockly.Msg.CONNECTION_START_TOOLTIP = "Tries to make a connection to another robot via bluetooth.";  // untranslated
Blockly.Msg.CONNECTION_WAIT_HELP = "With this block you can wait for a connection via bluetooth. If another robot is trying to make a connection with your robot, you should use this block to wait and accept this connection.";  // untranslated
Blockly.Msg.CONNECTION_WAIT_HELPURL = "https://mp-devel.iais.fraunhofer.de/wiki/x/CwA-/";  // untranslated
Blockly.Msg.CONNECTION_WAIT_TOOLTIP = "Waits for a connection via bluetooth.";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_HELPURL = "https://github.com/google/blockly/wiki/Loops#loop-termination-blocks";  // untranslated
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_BREAK = "romper el bucle";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_OPERATOR_CONTINUE = "continuar con la siguiente iteración del bucle";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_BREAK = "Romper el bucle que lo contiene.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_TOOLTIP_CONTINUE = "Saltar el resto de este bucle, y continuar con la siguiente iteración.";
Blockly.Msg.CONTROLS_FLOW_STATEMENTS_WARNING = "ADVERTENCIA: Este bloque puede usarse sólo dentro de un bucle.";
Blockly.Msg.CONTROLS_FOREACH_HELPURL = "https://es.wikipedia.org/wiki/Foreach";
Blockly.Msg.CONTROLS_FOREACH_TITLE = "para cada elemento %1 en la lista %2";
Blockly.Msg.CONTROLS_FOREACH_TOOLTIP = "Para cada elemento en una lista, establecer la variable '%1' al elemento y luego hacer algunas declaraciones.";
Blockly.Msg.CONTROLS_FOR_HELPURL = "https://github.com/google/blockly/wiki/Loops#count-with";  // untranslated
Blockly.Msg.CONTROLS_FOR_TITLE = "contar con %1 desde %2 hasta %3 de a %4";
Blockly.Msg.CONTROLS_FOR_TOOLTIP = "Hacer que la variable \"%1\" tome los valores desde el número de inicio hasta el número final, contando con el intervalo especificado, y hacer los bloques especificados.";
Blockly.Msg.CONTROLS_IF_ELSEIF_TOOLTIP = "Agregar una condición a este bloque.";
Blockly.Msg.CONTROLS_IF_ELSE_TOOLTIP = "Agregar una condición general final a este bloque.";
Blockly.Msg.CONTROLS_IF_HELPURL = "https://github.com/google/blockly/wiki/IfElse";  // untranslated
Blockly.Msg.CONTROLS_IF_IF_TOOLTIP = "Agregar, eliminar o reordenar las secciones para reconfigurar este bloque.";
Blockly.Msg.CONTROLS_IF_MSG_ELSE = "sino";
Blockly.Msg.CONTROLS_IF_MSG_ELSEIF = "sino si";
Blockly.Msg.CONTROLS_IF_MSG_IF = "si";
Blockly.Msg.CONTROLS_IF_TOOLTIP_1 = "Si un valor es verdadero, entonces hacer algunas declaraciones.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_2 = "Si un valor es verdadero, entonces hacer el primer bloque de declaraciones.  De lo contrario, hacer el segundo bloque de declaraciones.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_3 = "Si el primer valor es verdadero, entonces hacer el primer bloque de declaraciones. De lo contrario, si el segundo valor es verdadero, hacer el segundo bloque de declaraciones.";
Blockly.Msg.CONTROLS_IF_TOOLTIP_4 = "Si el primer valor es verdadero, entonces hacer el primer bloque de declaraciones. De lo contrario, si el segundo valor es verdadero, hacer el segundo bloque de declaraciones. Si ninguno de los valores son verdaderos, hacer el último bloque de declaraciones.";
Blockly.Msg.CONTROLS_REPEAT_HELPURL = "https://es.wikipedia.org/wiki/Bucle_for";
Blockly.Msg.CONTROLS_REPEAT_INPUT_DO = "hacer";
Blockly.Msg.CONTROLS_REPEAT_TITLE = "repetir %1 veces";
Blockly.Msg.CONTROLS_REPEAT_TOOLTIP = "Hacer algunas declaraciones varias veces.";
Blockly.Msg.CONTROLS_WHILEUNTIL_HELPURL = "https://github.com/google/blockly/wiki/Loops#repeat";  // untranslated
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_UNTIL = "repetir hasta";
Blockly.Msg.CONTROLS_WHILEUNTIL_OPERATOR_WHILE = "repetir mientras";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_UNTIL = "Mientras un valor sea falso, entonces hacer algunas declaraciones.";
Blockly.Msg.CONTROLS_WHILEUNTIL_TOOLTIP_WHILE = "Mientras un valor sea verdadero, entonces hacer algunas declaraciones.";
Blockly.Msg.DATATABLE_ACTUALIZATION = "Actualization date";  // untranslated
Blockly.Msg.DATATABLE_BLOCKS = "Blocks";  // untranslated
Blockly.Msg.DATATABLE_CONFIGURATIONS = "configurations";  // untranslated
Blockly.Msg.DATATABLE_CONFIGURATION_NAME = "Configuration name";  // untranslated
Blockly.Msg.DATATABLE_CREATED_BY = "Creator";  // untranslated
Blockly.Msg.DATATABLE_CREATED_ON = "Creation date";  // untranslated
Blockly.Msg.DATATABLE_EMPTY_TABLE = "There are no entries in this table";  // untranslated
Blockly.Msg.DATATABLE_ENTRIES = "entries";  // untranslated
Blockly.Msg.DATATABLE_FIRST = "<< First";  // untranslated
Blockly.Msg.DATATABLE_LAST = "Last >>";  // untranslated
Blockly.Msg.DATATABLE_NEXT = "Next >";  // untranslated
Blockly.Msg.DATATABLE_OF = "of";  // untranslated
Blockly.Msg.DATATABLE_PREVIOUS = "< Prev";  // untranslated
Blockly.Msg.DATATABLE_PROGRAMS = "programs";  // untranslated
Blockly.Msg.DATATABLE_PROGRAM_NAME = "Program name";  // untranslated
Blockly.Msg.DATATABLE_SHARED = "Shared";  // untranslated
Blockly.Msg.DATATABLE_SHARED_WITH = "Shared with";  // untranslated
Blockly.Msg.DATATABLE_SHOW = "Show";  // untranslated
Blockly.Msg.DATATABLE_SHOWING = "Showing";  // untranslated
Blockly.Msg.DATATABLE_TO = "to";  // untranslated
Blockly.Msg.DELETE_ALL_BLOCKS = "¿Eliminar todos los %1 bloques?";
Blockly.Msg.DELETE_BLOCK = "Eliminar bloque";
Blockly.Msg.DELETE_X_BLOCKS = "Eliminar %1 bloques";
Blockly.Msg.DISABLE_BLOCK = "Desactivar bloque";
Blockly.Msg.DISPLAY_CLEAR = "clear display";  // untranslated
Blockly.Msg.DISPLAY_CLEAR_HELP = "The display of the robot will be cleared.";  // untranslated
Blockly.Msg.DISPLAY_CLEAR_HELPURL = "https://mp-devel.iais.fraunhofer.de/wiki/x/CwA-/";  // untranslated
Blockly.Msg.DISPLAY_CLEAR_TOOLTIP = "Clears the display.";  // untranslated
Blockly.Msg.DISPLAY_COL = "in column";  // untranslated
Blockly.Msg.DISPLAY_PICTURE = "picture";  // untranslated
Blockly.Msg.DISPLAY_PICTURE_EYES_CLOSED = "eyes closed";  // untranslated
Blockly.Msg.DISPLAY_PICTURE_EYES_OPEN = "eyes open";  // untranslated
Blockly.Msg.DISPLAY_PICTURE_FLOWERS = "flowers";  // untranslated
Blockly.Msg.DISPLAY_PICTURE_GLASSES = "glasses";  // untranslated
Blockly.Msg.DISPLAY_PICTURE_HELP = "Show image on the display of the robot. Choose the image! With x and y can be set the position of the image on the display.";  // untranslated
Blockly.Msg.DISPLAY_PICTURE_HELPURL = "https://mp-devel.iais.fraunhofer.de/wiki/x/CwA-/";  // untranslated
Blockly.Msg.DISPLAY_PICTURE_TACHO = "tacho";  // untranslated
Blockly.Msg.DISPLAY_PICTURE_TOOLTIP = "Displays a picture on the screen.";  // untranslated
Blockly.Msg.DISPLAY_ROW = "in row";  // untranslated
Blockly.Msg.DISPLAY_SHOW = "show";  // untranslated
Blockly.Msg.DISPLAY_TEXT = "text";  // untranslated
Blockly.Msg.DISPLAY_TEXT_HELP = "Display text or numbers on the robot display. With the column and row parameter change the position of the text in the display.";  // untranslated
Blockly.Msg.DISPLAY_TEXT_HELPURL = "https://mp-devel.iais.fraunhofer.de/wiki/x/CwA-/";  // untranslated
Blockly.Msg.DISPLAY_TEXT_TOOLTIP = "Displays a text on the screen.";  // untranslated
Blockly.Msg.DUPLICATE_BLOCK = "Duplicar";
Blockly.Msg.ENABLE_BLOCK = "Activar bloque";
Blockly.Msg.ENCODER_GETMODE_TOOLTIP = "Gets the mode of the motor encoder.";  // untranslated
Blockly.Msg.ENCODER_GETSAMPLE_TOOLTIP = "Gets the current reading from the motor encoder.";  // untranslated
Blockly.Msg.ENCODER_RESET_TOOLTIP = "Resets the motor encoder.";  // untranslated
Blockly.Msg.ENCODER_SETMODE_TOOLTIP = "Sets the mode of the motor encoder.";  // untranslated
Blockly.Msg.EV3BRICK_HELP = "The brains of your robot;-) <br> You can plug in sensors to the sensor ports 1 - 4 and motors to the motor ports A - D. Wheel diameter and track width are important so that the robot is properly controlled with all »driving« blocks.";  // untranslated
Blockly.Msg.EV3BRICK_HELPURL = "https://mp-devel.iais.fraunhofer.de/wiki/x/CwA-/";  // untranslated
Blockly.Msg.EV3BRICK_TOOLTIP = "EV3 brick.";  // untranslated
Blockly.Msg.EXPAND_ALL = "Expandir bloques";
Blockly.Msg.EXPAND_BLOCK = "Expandir bloque";
Blockly.Msg.EXTERNAL_INPUTS = "Entradas externas";
Blockly.Msg.FOR = "for";  // untranslated
Blockly.Msg.GET = "get";  // untranslated
Blockly.Msg.GETSAMPLE_TOOLTIP = "Gets the current reading from choosen sensor.";  // untranslated
Blockly.Msg.GYRO_GETMODE_TOOLTIP = "Gets the mode of the gyro sensor.";  // untranslated
Blockly.Msg.GYRO_GETSAMPLE_TOOLTIP = "Gets the current reading from the gyro sensor.";  // untranslated
Blockly.Msg.GYRO_HELP = "The gyro sensor measures rotating movements. Depending on how it is mounted on the robot, it can realize how many degrees the robot has rotated or if the robot is in an inclined position.";  // untranslated
Blockly.Msg.GYRO_HELPURL = "https://mp-devel.iais.fraunhofer.de/wiki/x/CwA-/";  // untranslated
Blockly.Msg.GYRO_RESET_TOOLTIP = "Resets the gyro sensor.";  // untranslated
Blockly.Msg.GYRO_SETMODE_TOOLTIP = "Sets the mode of the gyro sensor.";  // untranslated
Blockly.Msg.GYRO_TOOLTIP = "Represents gyro sensor.";  // untranslated
Blockly.Msg.HELP = "Ayuda";
Blockly.Msg.IFELSE_TOOLTIP = "Checks the condition in 'if'. If the condition is true, executes the 'do' action; otherwise executes the 'else' action";  // untranslated
Blockly.Msg.IF_TOOLTIP = "Checks the condition in 'if'. If the condition is true, executes the 'do' action.";  // untranslated
Blockly.Msg.INFRARED_GETMODE_TOOLTIP = "Gets the mode of the infrared sensor.";  // untranslated
Blockly.Msg.INFRARED_GETSAMPLE_TOOLTIP = "Gets the current reading from the infrared sensor.";  // untranslated
Blockly.Msg.INFRARED_HELP = "The infrared sensor measures distances to an object. So it is well-suited for obstacle avoidancing robots. With the IR beacon, which emits infrared light itself, you can remotely control the robot. The infrared sensor can receive the signals of this IR Beacon.";  // untranslated
Blockly.Msg.INFRARED_HELPURL = "https://mp-devel.iais.fraunhofer.de/wiki/x/CwA-/";  // untranslated
Blockly.Msg.INFRARED_SETMODE_TOOLTIP = "Sets the mode of the infrared sensor.";  // untranslated
Blockly.Msg.INFRARED_TOOLTIP = "Represents infrared sensor.";  // untranslated
Blockly.Msg.INLINE_INPUTS = "Entradas en línea";
Blockly.Msg.KEY_ISPRESSEDANDRELEASED_TOOLTIP = "Is the specific button pressed and released?";  // untranslated
Blockly.Msg.KEY_ISPRESSED_TOOLTIP = "Is the selected button pressed?";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-empty-list";  // untranslated
Blockly.Msg.LISTS_CREATE_EMPTY_TITLE = "crear lista vacía";
Blockly.Msg.LISTS_CREATE_EMPTY_TOOLTIP = "Devuelve una lista, de longitud 0, sin ningún dato";
Blockly.Msg.LISTS_CREATE_TITLE = "list";  // untranslated
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TITLE_ADD = "lista";
Blockly.Msg.LISTS_CREATE_WITH_CONTAINER_TOOLTIP = "Agregar, eliminar o reorganizar las secciones para reconfigurar este bloque de lista.";
Blockly.Msg.LISTS_CREATE_WITH_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";
Blockly.Msg.LISTS_CREATE_WITH_INPUT_WITH = "crear lista con";
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TOOLTIP = "Agregar un elemento a la lista.";
Blockly.Msg.LISTS_CREATE_WITH_TOOLTIP = "Crear una lista con cualquier número de elementos.";
Blockly.Msg.LISTS_GET_INDEX_FIRST = "primero";
Blockly.Msg.LISTS_GET_INDEX_FROM_END = "# del final";
Blockly.Msg.LISTS_GET_INDEX_FROM_START = "#";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_GET = "obtener";
Blockly.Msg.LISTS_GET_INDEX_GET_REMOVE = "obtener y eliminar";
Blockly.Msg.LISTS_GET_INDEX_LAST = "último";
Blockly.Msg.LISTS_GET_INDEX_RANDOM = "aleatorio";
Blockly.Msg.LISTS_GET_INDEX_REMOVE = "eliminar";
Blockly.Msg.LISTS_GET_INDEX_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FIRST = "Devuelve el primer elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_END = "Devuelve el elemento en la posición especificada en una lista. #1 es el último elemento.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_FROM_START = "Devuelve el elemento en la posición especificada en la lista. #1 es el primer elemento.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_LAST = "Devuelve el último elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_RANDOM = "Devuelve un elemento aleatorio en una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FIRST = "Elimina y devuelve el primer elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_END = "Elimina y devuelve el elemento en la posición especificada en la lista. #1 es el último elemento.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_FROM_START = "Elimina y devuelve el elemento en la posición especificada en la lista. #1 es el primer elemento.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_LAST = "Elimina y devuelve el último elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_GET_REMOVE_RANDOM = "Elimina y devuelve un elemento aleatorio en una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FIRST = "Elimina el primer elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_END = "Elimina el elemento en la posición especificada en la lista. #1 es el último elemento.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_FROM_START = "Elimina el elemento en la posición especificada en la lista. #1 es el primer elemento.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_LAST = "Elimina el último elemento de una lista.";
Blockly.Msg.LISTS_GET_INDEX_TOOLTIP_REMOVE_RANDOM = "Elimina un elemento aleatorio en una lista.";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_END = "hasta # del final";
Blockly.Msg.LISTS_GET_SUBLIST_END_FROM_START = "hasta #";
Blockly.Msg.LISTS_GET_SUBLIST_END_LAST = "hasta el último";
Blockly.Msg.LISTS_GET_SUBLIST_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-a-sublist";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_START_FIRST = "obtener sublista desde el primero";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_END = "obtener sublista desde # del final";
Blockly.Msg.LISTS_GET_SUBLIST_START_FROM_START = "obtener sublista desde #";
Blockly.Msg.LISTS_GET_SUBLIST_TAIL = "";  // untranslated
Blockly.Msg.LISTS_GET_SUBLIST_TOOLTIP = "Crea una copia de la parte especificada de una lista.";
Blockly.Msg.LISTS_INDEX_OF_FIRST = "encontrar la primera aparición del elemento";
Blockly.Msg.LISTS_INDEX_OF_HELPURL = "https://github.com/google/blockly/wiki/Lists#getting-items-from-a-list";  // untranslated
Blockly.Msg.LISTS_INDEX_OF_LAST = "encontrar la última aparición del elemento";
Blockly.Msg.LISTS_INDEX_OF_TOOLTIP = "Devuelve el índice de la primera/última aparición del elemento en la lista. Devuelve 0 si el elemento no se encuentra.";
Blockly.Msg.LISTS_INLIST = "en la lista";
Blockly.Msg.LISTS_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Lists#is-empty";  // untranslated
Blockly.Msg.LISTS_ISEMPTY_TITLE = "%1 está vacía";
Blockly.Msg.LISTS_ISEMPTY_TOOLTIP = "Devuelve verdadero si la lista está vacía.";
Blockly.Msg.LISTS_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Lists#length-of";  // untranslated
Blockly.Msg.LISTS_LENGTH_TITLE = "longitud de %1";
Blockly.Msg.LISTS_LENGTH_TOOLTIP = "Devuelve la longitud de una lista.";
Blockly.Msg.LISTS_REPEAT_HELPURL = "https://github.com/google/blockly/wiki/Lists#create-list-with";  // untranslated
Blockly.Msg.LISTS_REPEAT_TITLE = "crear lista con el elemento %1 repetido %2 veces";
Blockly.Msg.LISTS_REPEAT_TOOLTIP = "Crea una lista que consta de un valor dado repetido el número de veces especificado.";
Blockly.Msg.LISTS_SET_INDEX_HELPURL = "https://github.com/google/blockly/wiki/Lists#in-list--set";  // untranslated
Blockly.Msg.LISTS_SET_INDEX_INPUT_TO = "como";
Blockly.Msg.LISTS_SET_INDEX_INSERT = "insertar en";
Blockly.Msg.LISTS_SET_INDEX_SET = "establecer";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FIRST = "Inserta el elemento al inicio de una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_END = "Inserta el elemento en la posición especificada en la lista. #1 es el último elemento.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_FROM_START = "Inserta el elemento en la posición especificada en la lista. #1 es el primer elemento.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_LAST = "Añade el elemento al final de una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_INSERT_RANDOM = "Inserta el elemento aleatoriamente en una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FIRST = "Establece el primer elemento de una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_END = "Establece el elemento en la posición especificada en una lista. #1 es el último elemento.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_FROM_START = "Establece el elemento en la posición especificada en una lista. #1 es el primer elemento.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_LAST = "Establece el último elemento de una lista.";
Blockly.Msg.LISTS_SET_INDEX_TOOLTIP_SET_RANDOM = "Establece un elemento aleatorio en una lista.";
Blockly.Msg.LISTS_SPLIT_HELPURL = "https://github.com/google/blockly/wiki/Lists#splitting-strings-and-joining-lists";
Blockly.Msg.LISTS_SPLIT_LIST_FROM_TEXT = "hacer lista a partir de texto";
Blockly.Msg.LISTS_SPLIT_TEXT_FROM_LIST = "hacer texto a partir de lista";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_JOIN = "Unir una lista de textos en un solo texto, separado por un delimitador.";
Blockly.Msg.LISTS_SPLIT_TOOLTIP_SPLIT = "Dividir el texto en una lista de textos, separando en cada delimitador.";
Blockly.Msg.LISTS_SPLIT_WITH_DELIMITER = "con delimitador";
Blockly.Msg.LOGIC_BOOLEAN_FALSE = "falso";
Blockly.Msg.LOGIC_BOOLEAN_HELPURL = "https://github.com/google/blockly/wiki/Logic#values";  // untranslated
Blockly.Msg.LOGIC_BOOLEAN_TOOLTIP = "Devuelve verdadero o falso.";
Blockly.Msg.LOGIC_BOOLEAN_TRUE = "verdadero";
Blockly.Msg.LOGIC_COMPARE_HELPURL = "https://es.wikipedia.org/wiki/Desigualdad_matemática";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_EQ = "Devuelve verdadero si ambas entradas son iguales.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GT = "Devuelve verdadero si la primera entrada es mayor que la segunda entrada.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_GTE = "Devuelve verdadero si la primera entrada es mayor o igual a la segunda entrada.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LT = "Devuelve verdadero si la primera entrada es menor que la segunda entrada.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_LTE = "Devuelve verdadero si la primera entrada es menor que o igual a la segunda entrada.";
Blockly.Msg.LOGIC_COMPARE_TOOLTIP_NEQ = "Devuelve verdadero si ambas entradas son distintas.";
Blockly.Msg.LOGIC_NEGATE_HELPURL = "https://github.com/google/blockly/wiki/Logic#not";  // untranslated
Blockly.Msg.LOGIC_NEGATE_TITLE = "no %1";
Blockly.Msg.LOGIC_NEGATE_TOOLTIP = "Devuelve verdadero si la entrada es falsa. Devuelve falso si la entrada es verdadera.";
Blockly.Msg.LOGIC_NULL = "nulo";
Blockly.Msg.LOGIC_NULL_HELPURL = "https://en.wikipedia.org/wiki/Nullable_type";  // untranslated
Blockly.Msg.LOGIC_NULL_TOOLTIP = "Devuelve nulo.";
Blockly.Msg.LOGIC_OPERATION_AND = "y";
Blockly.Msg.LOGIC_OPERATION_HELPURL = "https://github.com/google/blockly/wiki/Logic#logical-operations";  // untranslated
Blockly.Msg.LOGIC_OPERATION_OR = "o";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_AND = "Devuelve verdadero si ambas entradas son verdaderas.";
Blockly.Msg.LOGIC_OPERATION_TOOLTIP_OR = "Devuelve verdadero si al menos una de las entradas es verdadera.";
Blockly.Msg.LOGIC_TERNARY_CONDITION = "prueba";
Blockly.Msg.LOGIC_TERNARY_HELPURL = "https://en.wikipedia.org/wiki/%3F:";  // untranslated
Blockly.Msg.LOGIC_TERNARY_IF_FALSE = "si es falso";
Blockly.Msg.LOGIC_TERNARY_IF_TRUE = "si es verdadero";
Blockly.Msg.LOGIC_TERNARY_TOOLTIP = "Comprueba la condición en \"prueba\". Si la condición es verdadera, devuelve el valor \"si es verdadero\"; de lo contrario, devuelve el valor \"si es falso\".";
Blockly.Msg.LOOP = "repeat until";  // untranslated
Blockly.Msg.LOOPFOREVER_TOOLTIP = "Repeats indefinitely an action.";  // untranslated
Blockly.Msg.LOOP_COUNT = "number";  // untranslated
Blockly.Msg.LOOP_FOREVER = "repeat indefinitely";  // untranslated
Blockly.Msg.MATH_ADDITION_SYMBOL = "+";  // untranslated
Blockly.Msg.MATH_ARITHMETIC_HELPURL = "https://es.wikipedia.org/wiki/Aritmética";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_ADD = "Devuelve la suma de ambos números.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_DIVIDE = "Devuelve el cociente de ambos números.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MINUS = "Devuelve la diferencia de ambos números.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_MULTIPLY = "Devuelve el producto de ambos números.";
Blockly.Msg.MATH_ARITHMETIC_TOOLTIP_POWER = "Devuelve el primer número elevado a la potencia del segundo.";
Blockly.Msg.MATH_CHANGE_HELPURL = "https://en.wikipedia.org/wiki/Programming_idiom#Incrementing_a_counter";
Blockly.Msg.MATH_CHANGE_TITLE = "cambiar %1 por %2";
Blockly.Msg.MATH_CHANGE_TOOLTIP = "Añadir un número a la variable «%1».";
Blockly.Msg.MATH_CONSTANT_HELPURL = "https://es.wikipedia.org/wiki/Anexo:Constantes_matemáticas";
Blockly.Msg.MATH_CONSTANT_TOOLTIP = "Devuelve una de las constantes comunes: π (3.141…), e (2.718…), φ (1.618…), sqrt(2) (1.414…), sqrt(½) (0.707…) o ∞ (infinito).";
Blockly.Msg.MATH_CONSTRAIN_HELPURL = "https://en.wikipedia.org/wiki/Clamping_%28graphics%29";  // untranslated
Blockly.Msg.MATH_CONSTRAIN_TITLE = "limitar %1 entre %2 y %3";
Blockly.Msg.MATH_CONSTRAIN_TOOLTIP = "Limitar un número entre los límites especificados (inclusive).";
Blockly.Msg.MATH_DIVISION_SYMBOL = "÷";  // untranslated
Blockly.Msg.MATH_IS_DIVISIBLE_BY = "es divisible por";
Blockly.Msg.MATH_IS_EVEN = "es par";
Blockly.Msg.MATH_IS_NEGATIVE = "es negativo";
Blockly.Msg.MATH_IS_ODD = "es impar";
Blockly.Msg.MATH_IS_POSITIVE = "es positivo";
Blockly.Msg.MATH_IS_PRIME = "es primo";
Blockly.Msg.MATH_IS_TOOLTIP = "Comprueba si un número es par, impar, primo, entero, positivo, negativo, o si es divisible por un número determinado. Devuelve verdadero o falso.";
Blockly.Msg.MATH_IS_WHOLE = "es entero";
Blockly.Msg.MATH_MODULO_HELPURL = "https://en.wikipedia.org/wiki/Modulo_operation";
Blockly.Msg.MATH_MODULO_TITLE = "resto de %1 ÷ %2";
Blockly.Msg.MATH_MODULO_TOOLTIP = "Devuelve el resto al dividir los dos números.";
Blockly.Msg.MATH_MULTIPLICATION_SYMBOL = "×";  // untranslated
Blockly.Msg.MATH_NUMBER_HELPURL = "https://es.wikipedia.org/wiki/Número";
Blockly.Msg.MATH_NUMBER_TOOLTIP = "Un número.";
Blockly.Msg.MATH_ONLIST_HELPURL = "";  // untranslated
Blockly.Msg.MATH_ONLIST_OPERATOR_AVERAGE = "promedio de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MAX = "máximo de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MEDIAN = "mediana de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MIN = "mínimo de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_MODE = "modas de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_RANDOM = "elemento aleatorio de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_STD_DEV = "desviación estándar de la lista";
Blockly.Msg.MATH_ONLIST_OPERATOR_SUM = "suma de la lista";
Blockly.Msg.MATH_ONLIST_TOOLTIP_AVERAGE = "Devuelve el promedio (media aritmética) de los valores numéricos en la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MAX = "Devuelve el número más grande en la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MEDIAN = "Devuelve la mediana en la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MIN = "Devuelve el número más pequeño en la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_MODE = "Devuelve una lista de los elementos más comunes en la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_RANDOM = "Devuelve un elemento aleatorio de la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_STD_DEV = "Devuelve la desviación estándar de la lista.";
Blockly.Msg.MATH_ONLIST_TOOLTIP_SUM = "Devuelve la suma de todos los números en la lista.";
Blockly.Msg.MATH_POWER_SYMBOL = "^";  // untranslated
Blockly.Msg.MATH_RANDOM_FLOAT_HELPURL = "https://es.wikipedia.org/wiki/Generador_de_números_aleatorios";
Blockly.Msg.MATH_RANDOM_FLOAT_TITLE_RANDOM = "fracción aleatoria";
Blockly.Msg.MATH_RANDOM_FLOAT_TOOLTIP = "Devuelve una fracción aleatoria entre 0,0 (ambos inclusive) y 1.0 (exclusivo).";
Blockly.Msg.MATH_RANDOM_INT_HELPURL = "https://es.wikipedia.org/wiki/Generador_de_números_aleatorios";
Blockly.Msg.MATH_RANDOM_INT_TITLE = "entero aleatorio de %1 a %2";
Blockly.Msg.MATH_RANDOM_INT_TOOLTIP = "Devuelve un entero aleatorio entre los dos límites especificados, inclusive.";
Blockly.Msg.MATH_ROUND_HELPURL = "https://es.wikipedia.org/wiki/Redondeo";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUND = "redondear";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDDOWN = "redondear hacia abajo";
Blockly.Msg.MATH_ROUND_OPERATOR_ROUNDUP = "redondear hacia arriba";
Blockly.Msg.MATH_ROUND_TOOLTIP = "Redondear un número hacia arriba o hacia abajo.";
Blockly.Msg.MATH_SINGLE_HELPURL = "https://es.wikipedia.org/wiki/Ra%C3%ADz_cuadrada";
Blockly.Msg.MATH_SINGLE_OP_ABSOLUTE = "absoluto";
Blockly.Msg.MATH_SINGLE_OP_ROOT = "raíz cuadrada";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ABS = "Devuelve el valor absoluto de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_EXP = "Devuelve e a la potencia de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LN = "Devuelve el logaritmo natural de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_LOG10 = "Devuelve el logaritmo base 10 de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_NEG = "Devuelve la negación de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_POW10 = "Devuelve 10 a la potencia de un número.";
Blockly.Msg.MATH_SINGLE_TOOLTIP_ROOT = "Devuelve la raíz cuadrada de un número.";
Blockly.Msg.MATH_SUBTRACTION_SYMBOL = "-";  // untranslated
Blockly.Msg.MATH_TRIG_ACOS = "acos";  // untranslated
Blockly.Msg.MATH_TRIG_ASIN = "asin";  // untranslated
Blockly.Msg.MATH_TRIG_ATAN = "atan";  // untranslated
Blockly.Msg.MATH_TRIG_COS = "cos";  // untranslated
Blockly.Msg.MATH_TRIG_HELPURL = "https://es.wikipedia.org/wiki/Función_trigonométrica";
Blockly.Msg.MATH_TRIG_SIN = "sin";  // untranslated
Blockly.Msg.MATH_TRIG_TAN = "tan";  // untranslated
Blockly.Msg.MATH_TRIG_TOOLTIP_ACOS = "Devuelve el arcocoseno de un número.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ASIN = "Devuelve el arcoseno de un número.";
Blockly.Msg.MATH_TRIG_TOOLTIP_ATAN = "Devuelve el arcotangente de un número.";
Blockly.Msg.MATH_TRIG_TOOLTIP_COS = "Devuelve el coseno de un grado (no radián).";
Blockly.Msg.MATH_TRIG_TOOLTIP_SIN = "Devuelve el seno de un grado (no radián).";
Blockly.Msg.MATH_TRIG_TOOLTIP_TAN = "Devuelve la tangente de un grado (no radián).";
Blockly.Msg.ME = "Yo";
Blockly.Msg.MENU_ABOUT = "about";  // untranslated
Blockly.Msg.MENU_ATTACH = "attach ...";  // untranslated
Blockly.Msg.MENU_BEGINNER = "beginner";  // untranslated
Blockly.Msg.MENU_CHANGE = "change ...";  // untranslated
Blockly.Msg.MENU_CHECK = "check";  // untranslated
Blockly.Msg.MENU_CONNECT = "connect ...";  // untranslated
Blockly.Msg.MENU_DELETE_USER = "delete user ...";  // untranslated
Blockly.Msg.MENU_EDIT = "edit";  // untranslated
Blockly.Msg.MENU_EV3 = "EV3 preparation";  // untranslated
Blockly.Msg.MENU_EXPERT = "expert";  // untranslated
Blockly.Msg.MENU_FAQ = "FAQ";  // untranslated
Blockly.Msg.MENU_GENERAL = "general help";  // untranslated
Blockly.Msg.MENU_HELP = "help";  // untranslated
Blockly.Msg.MENU_LIST = "list ...";  // untranslated
Blockly.Msg.MENU_LOGGING = "logging";  // untranslated
Blockly.Msg.MENU_LOG_IN = "login ...";  // untranslated
Blockly.Msg.MENU_LOG_OUT = "logout";  // untranslated
Blockly.Msg.MENU_NEW = "new ...";  // untranslated
Blockly.Msg.MENU_PROGRAMMING = "programming with NEPO";  // untranslated
Blockly.Msg.MENU_PROPERTIES = "properties";  // untranslated
Blockly.Msg.MENU_ROBOT = "robot";  // untranslated
Blockly.Msg.MENU_ROBOT_STATE_INFO = "info";  // untranslated
Blockly.Msg.MENU_SAVE = "save";  // untranslated
Blockly.Msg.MENU_SAVE_AS = "save as ...";  // untranslated
Blockly.Msg.MENU_SHOW_AGAIN = "show welcome note again";  // untranslated
Blockly.Msg.MENU_SHOW_CODE = "show code";  // untranslated
Blockly.Msg.MENU_SIM_BACK = "Back";  // untranslated
Blockly.Msg.MENU_SIM_DRAW = "Drawing Scene";  // untranslated
Blockly.Msg.MENU_SIM_INFO = "Info";  // untranslated
Blockly.Msg.MENU_SIM_MATH = "Math Scene";  // untranslated
Blockly.Msg.MENU_SIM_RESCUE = "Rescue Scene";  // untranslated
Blockly.Msg.MENU_SIM_ROBERTA = "Roberta Scene";  // untranslated
Blockly.Msg.MENU_SIM_SIMPLE = "Simple Scene";  // untranslated
Blockly.Msg.MENU_SIM_START_PAUSE = "Start/Pause";  // untranslated
Blockly.Msg.MENU_SIM_STEP = "Step";  // untranslated
Blockly.Msg.MENU_SIM_STOP = "Stop";  // untranslated
Blockly.Msg.MENU_START = "run";  // untranslated
Blockly.Msg.MENU_STATE_INFO = "state information";  // untranslated
Blockly.Msg.MENU_TITLE_EDIT = "edit";  // untranslated
Blockly.Msg.MENU_TITLE_HELP = "help";  // untranslated
Blockly.Msg.MENU_TITLE_ROBOT = "robots";  // untranslated
Blockly.Msg.MENU_TITLE_ROBOT_STATE = "robot info";  // untranslated
Blockly.Msg.MENU_TITLE_USER = "user";  // untranslated
Blockly.Msg.MENU_TITLE_USER_STATE = "user info";  // untranslated
Blockly.Msg.MENU_TOOLBOX = "NEPO-Blocks";  // untranslated
Blockly.Msg.MENU_TOOLBOX_BEGINNER = "NEPO-Blocks beginner";  // untranslated
Blockly.Msg.MENU_TOOLBOX_EXPERT = "NEPO-Blocks expert";  // untranslated
Blockly.Msg.MENU_UPDATE_FIRMWARE = "update firmware";  // untranslated
Blockly.Msg.MENU_USER = "login";  // untranslated
Blockly.Msg.MESSAGE_CONFIGURATION_DELETED = "Configuration '$' was deleted";  // untranslated
Blockly.Msg.MESSAGE_EDIT_CHECK = "Your program is now checked!";  // untranslated
Blockly.Msg.MESSAGE_EDIT_SAVE_CONFIGURATION = "Your configuration has been saved";  // untranslated
Blockly.Msg.MESSAGE_EDIT_SAVE_CONFIGURATION_AS = "Your configuration has been saved as '$'";  // untranslated
Blockly.Msg.MESSAGE_EDIT_SAVE_PROGRAM = "Your program has been saved";  // untranslated
Blockly.Msg.MESSAGE_EDIT_SAVE_PROGRAM_AS = "Your program has been saved as '$'";  // untranslated
Blockly.Msg.MESSAGE_EDIT_START = "Your program $ will run in a moment!";  // untranslated
Blockly.Msg.MESSAGE_FIRMWARE_ERROR = "There is a conflict with the firmware version of your robot and the Open Roberta Lab. Please contact us.";  // untranslated
Blockly.Msg.MESSAGE_INVALID_NAME = "Please fill in a correct name. A correct name begins with a letter and can only content letters or numbers.";  // untranslated
Blockly.Msg.MESSAGE_NOT_AVAILABLE = "Not available.";  // untranslated
Blockly.Msg.MESSAGE_PASSWORD_ERROR = "Something went wrong while you filled in the two passwords.";  // untranslated
Blockly.Msg.MESSAGE_PROGRAM_DELETED = "Program '$' was deleted";  // untranslated
Blockly.Msg.MESSAGE_RELATION_DELETED = "A relation of Program '$' was deleted";  // untranslated
Blockly.Msg.MESSAGE_RESTART_ROBOT = "Your robot can only use the new firmware, if you restart its system. Just turn the robot off and on again and reconnect the robot afterwards to the Open Roberta Lab.";  // untranslated
Blockly.Msg.MESSAGE_ROBOT_CONNECTED = "Your robot $ is connected";  // untranslated
Blockly.Msg.MESSAGE_ROBOT_FIRMWARE_UPDATE = "Your robot runs now version '$'";  // untranslated
Blockly.Msg.MESSAGE_USER_DELETED = "User deleted";  // untranslated
Blockly.Msg.MESSAGE_USER_LOGIN = "Hello '$'";  // untranslated
Blockly.Msg.MESSAGE_USER_LOGOUT = "You are logged out";  // untranslated
Blockly.Msg.MESSAGE_USER_NEW = "Hello '$'";  // untranslated
Blockly.Msg.MODE = "mode";  // untranslated
Blockly.Msg.MODE_AMBIENTLIGHT = "ambient light";  // untranslated
Blockly.Msg.MODE_ANGLE = "angle";  // untranslated
Blockly.Msg.MODE_COLOUR = "colour";  // untranslated
Blockly.Msg.MODE_DEGREE = "degree";  // untranslated
Blockly.Msg.MODE_DISTANCE = "distance";  // untranslated
Blockly.Msg.MODE_LIGHT = "light";  // untranslated
Blockly.Msg.MODE_PRESENCE = "presence";  // untranslated
Blockly.Msg.MODE_RATE = "rate";  // untranslated
Blockly.Msg.MODE_RGB = "RGB";  // untranslated
Blockly.Msg.MODE_ROTATION = "rotation";  // untranslated
Blockly.Msg.MODE_STATE = "state";  // untranslated
Blockly.Msg.MOTOR = "motor";  // untranslated
Blockly.Msg.MOTORDIFF_ON_FOR_HELP = "The robot drives forwards as long as it is not stopped by another driving block. The speed can be set in the Speed field. When the program ends the motors will stop automatically.";  // untranslated
Blockly.Msg.MOTORDIFF_ON_FOR_HELPURL = "https://mp-devel.iais.fraunhofer.de/wiki/x/CwA-/";  // untranslated
Blockly.Msg.MOTORDIFF_ON_FOR_TOOLTIP = "Starts the robot with specific speed and stops after specific distance.";  // untranslated
Blockly.Msg.MOTORDIFF_ON_HELP = "The robot drives forwards until it is not stopped or it is used different block for driving. The speed can be set in the field speed. When the program ends the motors will stop automatically";  // untranslated
Blockly.Msg.MOTORDIFF_ON_HELPURL = "https://mp-devel.iais.fraunhofer.de/wiki/x/CwA-/";  // untranslated
Blockly.Msg.MOTORDIFF_ON_TOOLTIP = "Starts the robot with specific speed.";  // untranslated
Blockly.Msg.MOTORDIFF_STOP_HELP = "The robot will stop, by stopping the both motors.";  // untranslated
Blockly.Msg.MOTORDIFF_STOP_HELPURL = "https://mp-devel.iais.fraunhofer.de/wiki/x/CwA-/";  // untranslated
Blockly.Msg.MOTORDIFF_STOP_TOOLTIP = "Stops the robot.";  // untranslated
Blockly.Msg.MOTORDIFF_TURN_FOR_HELP = "The robot will rotate until it reaches the degrees set by the user.";  // untranslated
Blockly.Msg.MOTORDIFF_TURN_FOR_HELPURL = "https://mp-devel.iais.fraunhofer.de/wiki/x/CwA-/";  // untranslated
Blockly.Msg.MOTORDIFF_TURN_FOR_TOOLTIP = "Turns the robot for number of degrees.";  // untranslated
Blockly.Msg.MOTORDIFF_TURN_HELP = "Your robot turns as long as it is not stopped by another driving block. The speed can be set in the Speed field.";  // untranslated
Blockly.Msg.MOTORDIFF_TURN_HELPURL = "https://mp-devel.iais.fraunhofer.de/wiki/x/CwA-/";  // untranslated
Blockly.Msg.MOTORDIFF_TURN_TOOLTIP = "Turns the robot.";  // untranslated
Blockly.Msg.MOTOR_BACKWARD = "backwards";  // untranslated
Blockly.Msg.MOTOR_BIG = "big";  // untranslated
Blockly.Msg.MOTOR_BIG_HELP = "The big motor is a so-called servomotor. You can control its rotational speed and acceleration, since it has a built-in rotation sensor. For programming with the »driving« blocks it is important to know how it is mounted on the robot.";  // untranslated
Blockly.Msg.MOTOR_BIG_HELPURL = "https://mp-devel.iais.fraunhofer.de/wiki/x/CwA-/";  // untranslated
Blockly.Msg.MOTOR_BIG_TOOLTIP = "Represents a big motor.";  // untranslated
Blockly.Msg.MOTOR_BRAKE = "brake";  // untranslated
Blockly.Msg.MOTOR_DEGREE = "degree";  // untranslated
Blockly.Msg.MOTOR_DISTANCE = "distance cm";  // untranslated
Blockly.Msg.MOTOR_DRIVE = "drive";  // untranslated
Blockly.Msg.MOTOR_FLOAT = "float";  // untranslated
Blockly.Msg.MOTOR_FOREWARD = "forwards";  // untranslated
Blockly.Msg.MOTOR_GETPOWER_HELP = "help";  // untranslated
Blockly.Msg.MOTOR_GETPOWER_HELPURL = "https://mp-devel.iais.fraunhofer.de/wiki/x/CwA-/";  // untranslated
Blockly.Msg.MOTOR_GETPOWER_TOOLTIP = "Gets current power of this motor.";  // untranslated
Blockly.Msg.MOTOR_LEFT = "left";  // untranslated
Blockly.Msg.MOTOR_MIDDLE = "middle";  // untranslated
Blockly.Msg.MOTOR_MIDDLE_HELP = "The middle motor is a so-called servomotor. You can control its rotational speed and acceleration, since it has a built-in rotation sensor. For the programming blocks it is important to know in which direction it should rotate.";  // untranslated
Blockly.Msg.MOTOR_MIDDLE_HELPURL = "https://mp-devel.iais.fraunhofer.de/wiki/x/CwA-/";  // untranslated
Blockly.Msg.MOTOR_MIDDLE_TOOLTIP = "Represents a middle motor.";  // untranslated
Blockly.Msg.MOTOR_NONE = "none";  // untranslated
Blockly.Msg.MOTOR_ON_FOR_HELP = "help";  // untranslated
Blockly.Msg.MOTOR_ON_FOR_HELPURL = "https://mp-devel.iais.fraunhofer.de/wiki/x/CwA-/";  // untranslated
Blockly.Msg.MOTOR_ON_FOR_TOOLTIP = "Turns motor on and stops motor after execution of rotations/degrees.";  // untranslated
Blockly.Msg.MOTOR_ON_HELP = "help";  // untranslated
Blockly.Msg.MOTOR_ON_HELPURL = "https://mp-devel.iais.fraunhofer.de/wiki/x/CwA-/";  // untranslated
Blockly.Msg.MOTOR_ON_TOOLTIP = "Turns motor on with specific power.";  // untranslated
Blockly.Msg.MOTOR_OTHER = "other power consumer";  // untranslated
Blockly.Msg.MOTOR_PORT = "motor port";  // untranslated
Blockly.Msg.MOTOR_REGULATION = "regulation";  // untranslated
Blockly.Msg.MOTOR_RIGHT = "right";  // untranslated
Blockly.Msg.MOTOR_ROTATION = "rotation";  // untranslated
Blockly.Msg.MOTOR_ROTATION_REVERSE = "direction of rotation";  // untranslated
Blockly.Msg.MOTOR_SETPOWER_HELP = "help";  // untranslated
Blockly.Msg.MOTOR_SETPOWER_HELPURL = "https://mp-devel.iais.fraunhofer.de/wiki/x/CwA-/";  // untranslated
Blockly.Msg.MOTOR_SETPOWER_TOOLTIP = "Sets power of this motor.";  // untranslated
Blockly.Msg.MOTOR_SIDE = "side";  // untranslated
Blockly.Msg.MOTOR_SPEED = "speed";  // untranslated
Blockly.Msg.MOTOR_STOP = "stop";  // untranslated
Blockly.Msg.MOTOR_STOP_HELP = "help";  // untranslated
Blockly.Msg.MOTOR_STOP_HELPURL = "https://mp-devel.iais.fraunhofer.de/wiki/x/CwA-/";  // untranslated
Blockly.Msg.MOTOR_STOP_TOOLTIP = "Stops this motor.";  // untranslated
Blockly.Msg.MOTOR_TURN = "turn";  // untranslated
Blockly.Msg.NEW_VARIABLE = "Variable nueva…";
Blockly.Msg.NEW_VARIABLE_TITLE = "Nombre de variable nueva:";
Blockly.Msg.NO = "no";  // untranslated
Blockly.Msg.OFF = "off";  // untranslated
Blockly.Msg.ON = "on";  // untranslated
Blockly.Msg.ORA_COMMAND_INVALID = "Invalid Javascript-command";  // untranslated
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_CONFIGURATION_NOT_FOUND = "The robot configuration could not be found on the server.";  // untranslated
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_CONFIGURATION_TRANSFORM_FAILED = "The robot configuration could not be transformed into the robots programming language.";  // untranslated
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_COMPILE_FAILED = "The program could not be transformed into machine code.";  // untranslated
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_GENERATION_FAILED = "The program could not be generated.";  // untranslated
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_NOT_FOUND = "The program could not be transformed into the robots programming language.";  // untranslated
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_STORE_FAILED = "The program could not be saved because of an internal error.";  // untranslated
Blockly.Msg.ORA_COMPILERWORKFLOW_ERROR_PROGRAM_TRANSFORM_FAILED = "The program could not be transformed into the robots programming language.";  // untranslated
Blockly.Msg.ORA_CONFIGURATION_DELETE_ERROR = "An error has occured while deleting the robot configuration, please try it again!";  // untranslated
Blockly.Msg.ORA_CONFIGURATION_DELETE_SUCCESS = "Configuration deleted";  // untranslated
Blockly.Msg.ORA_CONFIGURATION_ERROR_ID_INVALID = "Configuration name is not a valid identifier.";  // untranslated
Blockly.Msg.ORA_CONFIGURATION_GET_ALL_SUCCESS = "Configuration loaded";  // untranslated
Blockly.Msg.ORA_CONFIGURATION_GET_ONE_ERROR_NOT_FOUND = "The robot configuration could not be found in the database.";  // untranslated
Blockly.Msg.ORA_CONFIGURATION_GET_ONE_SUCCESS = "Configuration loaded";  // untranslated
Blockly.Msg.ORA_CONFIGURATION_SAVE_ERROR = "An error has occured while saving the robot configuration.";  // untranslated
Blockly.Msg.ORA_CONFIGURATION_SAVE_ERROR_NOT_SAVED_TO_DB = "An error error has occured while saving the configuration in the database.";  // untranslated
Blockly.Msg.ORA_CONFIGURATION_SAVE_SUCCESS = "Configuration saved";  // untranslated
Blockly.Msg.ORA_OWNER_DOES_NOT_EXIST = "The owner does not exist.";  // untranslated
Blockly.Msg.ORA_PROGRAM_DELETE_ERROR = "An error error has occured while deleding the configuration. Please try it again!";  // untranslated
Blockly.Msg.ORA_PROGRAM_DELETE_SUCCESS = "Program deeleted";  // untranslated
Blockly.Msg.ORA_PROGRAM_ERROR_ID_INVALID = "The name of your  program is already used by the system. Please choose another name and try it again!";  // untranslated
Blockly.Msg.ORA_PROGRAM_GET_ALL_SUCCESS = "Programs loaded";  // untranslated
Blockly.Msg.ORA_PROGRAM_GET_ONE_ERROR_NOT_FOUND = "Program not found.";  // untranslated
Blockly.Msg.ORA_PROGRAM_GET_ONE_ERROR_NOT_LOGGED_IN = "You are not logged in, please log in with your username and password or create a new user.";  // untranslated
Blockly.Msg.ORA_PROGRAM_GET_ONE_SUCCESS = "Program loaded";  // untranslated
Blockly.Msg.ORA_PROGRAM_SAVE_AS_ERROR_PROGRAM_EXISTS = "This program already exists.";  // untranslated
Blockly.Msg.ORA_PROGRAM_SAVE_ERROR_NOT_SAVED_TO_DB = "An error has occured while saving the program.";  // untranslated
Blockly.Msg.ORA_PROGRAM_SAVE_ERROR_NO_WRITE_PERMISSION = "You do not have the permission to modify this program!";  // untranslated
Blockly.Msg.ORA_PROGRAM_SAVE_ERROR_OPTIMISTIC_TIMESTAMP_LOCKING = "This program has been changed recently by someone else. You can can save your changes in a new program, choose >save as< !";  // untranslated
Blockly.Msg.ORA_PROGRAM_SAVE_ERROR_PROGRAM_TO_UPDATE_NOT_FOUND = "The program could not be found, so it is impossible to update it.";  // untranslated
Blockly.Msg.ORA_PROGRAM_SAVE_SUCCESS = "Program saved";  // untranslated
Blockly.Msg.ORA_PROGRAM_TO_SHARE_DOES_NOT_EXIST = "The program that you would like to share does not exist.";  // untranslated
Blockly.Msg.ORA_ROBOT_FIRMWAREUPDATE_IMPOSSIBLE = "An error has occured while updating the new firmware on your robot.";  // untranslated
Blockly.Msg.ORA_ROBOT_FIRMWAREUPDATE_POSSIBLE = "The firmware was updated";  // untranslated
Blockly.Msg.ORA_ROBOT_NOT_CONNECTED = "There is no robot connected. Check if your robot is switched on, connect it to the server and type in the robots password under robot - connect in the menu. <br /> If you have problems to do this, please have a look at our help pages.";  // untranslated
Blockly.Msg.ORA_ROBOT_NOT_WAITING = "The robot does not wait for a run command.";  // untranslated
Blockly.Msg.ORA_ROBOT_PUSH_RUN = "Robot waited and now the jar is pushed to the robot";  // untranslated
Blockly.Msg.ORA_SERVER_ERROR = "Server-Error";  // untranslated
Blockly.Msg.ORA_TOKEN_SET_ERROR_NO_ROBOT_WAITING = "Check if your robot is switched on and connected to the server. <br />If you have problems to do this, please have a look at our help pages.";  // untranslated
Blockly.Msg.ORA_TOKEN_SET_SUCCESS = "Token set";  // untranslated
Blockly.Msg.ORA_TOOLBOX_DELETE_ERROR = "An error has occured while deleting the toolbox, please try it again!";  // untranslated
Blockly.Msg.ORA_TOOLBOX_DELETE_SUCCESS = "Toolbox deleted";  // untranslated
Blockly.Msg.ORA_TOOLBOX_ERROR_ID_INVALID = "Toolbox name is not a valid identifier.";  // untranslated
Blockly.Msg.ORA_TOOLBOX_GET_ALL_SUCCESS = "Toolbox loaded";  // untranslated
Blockly.Msg.ORA_TOOLBOX_GET_ONE_ERROR_NOT_FOUND = "The toolbox could not be found in the database.";  // untranslated
Blockly.Msg.ORA_TOOLBOX_GET_ONE_SUCCESS = "Toolbox loaded";  // untranslated
Blockly.Msg.ORA_TOOLBOX_LOAD_ERROR_NOT_FOUND = "The selected NEPO-Blocks could not be found in the database.";  // untranslated
Blockly.Msg.ORA_TOOLBOX_LOAD_SUCCESS = "Toolbox loaded";  // untranslated
Blockly.Msg.ORA_TOOLBOX_SAVE_ERROR = "An error has occured while saving the toolbox.";  // untranslated
Blockly.Msg.ORA_TOOLBOX_SAVE_ERROR_NOT_SAVED_TO_DB = "An error error has occured while saving the configuration in the database.";  // untranslated
Blockly.Msg.ORA_TOOLBOX_SAVE_SUCCESS = "Toolbox saved";  // untranslated
Blockly.Msg.ORA_TOOLBOX_TRANSFORM_ERROR = "Transformation error?";  // untranslated
Blockly.Msg.ORA_USER_CREATE_ERROR_MISSING_REQ_FIELDS = "Check all required input fields have been filled out.";  // untranslated
Blockly.Msg.ORA_USER_CREATE_ERROR_NOT_SAVED_TO_DB = "Error while storing user.";  // untranslated
Blockly.Msg.ORA_USER_CREATE_SUCCESS = "The user was successfully created";  // untranslated
Blockly.Msg.ORA_USER_DELETE_ERROR_ID_NOT_FOUND = "Error while deleting user.";  // untranslated
Blockly.Msg.ORA_USER_DELETE_ERROR_NOT_DELETED_IN_DB = "Error while deleting user in database.";  // untranslated
Blockly.Msg.ORA_USER_DELETE_SUCCESS = "The user was successfully deleted";  // untranslated
Blockly.Msg.ORA_USER_GET_ALL_SUCCESS = "Users loaded";  // untranslated
Blockly.Msg.ORA_USER_GET_ONE_ERROR_ID_OR_PASSWORD_WRONG = "An error occured while logging in.";  // untranslated
Blockly.Msg.ORA_USER_GET_ONE_SUCCESS = "Login successfull";  // untranslated
Blockly.Msg.ORA_USER_TO_SHARE_DOES_NOT_EXIST = "The user with which you would like to share the program does not exist. <br />Try it again!";  // untranslated
Blockly.Msg.ORA_USER_TO_SHARE_SAME_AS_LOGIN_USER = "You cannot share any programs with yourself.";  // untranslated
Blockly.Msg.ORDINAL_NUMBER_SUFFIX = "";  // untranslated
Blockly.Msg.PLAY = "play";  // untranslated
Blockly.Msg.PLAY_DURATION = "duration";  // untranslated
Blockly.Msg.PLAY_FILE = "file";  // untranslated
Blockly.Msg.PLAY_FILE_HELP = "help";  // untranslated
Blockly.Msg.PLAY_FILE_HELPURL = "https://mp-devel.iais.fraunhofer.de/wiki/x/CwA-/";  // untranslated
Blockly.Msg.PLAY_FILE_TOOLTIP = "Plays a sound file.";  // untranslated
Blockly.Msg.PLAY_FREQUENZ = "frequency";  // untranslated
Blockly.Msg.PLAY_GETVOLUME_HELP = "help";  // untranslated
Blockly.Msg.PLAY_GETVOLUME_HELPURL = "https://mp-devel.iais.fraunhofer.de/wiki/x/CwA-/";  // untranslated
Blockly.Msg.PLAY_GETVOLUME_TOOLTIP = "Gets current volume.";  // untranslated
Blockly.Msg.PLAY_SETVOLUME_HELP = "You can set the volume of the robot. 0 is mute and 100 is the max. volume.";  // untranslated
Blockly.Msg.PLAY_SETVOLUME_HELPURL = "https://mp-devel.iais.fraunhofer.de/wiki/x/CwA-/";  // untranslated
Blockly.Msg.PLAY_SETVOLUME_TOOLTIP = "Sets volume.";  // untranslated
Blockly.Msg.PLAY_TONE = "tone";  // untranslated
Blockly.Msg.PLAY_TONE_HELP = "The robot will play a tone. The frequency of the tone can be set between 270 and 10000. The human ear cannot hear anything above or below this frequency.";  // untranslated
Blockly.Msg.PLAY_TONE_HELPURL = "https://mp-devel.iais.fraunhofer.de/wiki/x/CwA-/";  // untranslated
Blockly.Msg.PLAY_TONE_TOOLTIP = "Plays a tone.";  // untranslated
Blockly.Msg.PLAY_VOLUME = "volume";  // untranslated
Blockly.Msg.POPUP_ABOUT_JOIN = "I want to help";  // untranslated
Blockly.Msg.POPUP_ABOUT_TEXT = "The Open Roberta Lab is a cloud-based integrated programming environment that enables children and adolescents to program easily Lego Mindstorms EV3 robots. This platform is completely open source so taking part is desirable! Both the software and the open source developer tools are available via Fraunhofer servers.";  // untranslated
Blockly.Msg.POPUP_ABOUT_TEXT_DEV = "The Open Roberta Lab is an open-source programming platform developed by Fraunhofer IAIS within the initiative <a href='http://www.roberta-home.de/'>»Roberta – Learning with Robots«</a>";  // untranslated
Blockly.Msg.POPUP_ABOUT_TEXT_GOOG = "Open Roberta was initiated in collaboration with Google Germany to reduce the hurdles for students, teachers and schools programming educational robots. Open Roberta is financed by Google.org (2014 - 2015) with 1Mio Euro.</a>";  // untranslated
Blockly.Msg.POPUP_ATTENTION = "Attention";  // untranslated
Blockly.Msg.POPUP_BEFOREUNLOAD = "You have unsaved changes in your program or configuration. Sign in and save your program or configuration.";  // untranslated
Blockly.Msg.POPUP_BEFOREUNLOAD_LOGGEDIN = "You have unsaved changes in your program or configuration.";  // untranslated
Blockly.Msg.POPUP_CANCEL = "Cancel";  // untranslated
Blockly.Msg.POPUP_CONFIRM_DELETE_CONFIGURATION = "Do you really want to delete the configuration ?";  // untranslated
Blockly.Msg.POPUP_CONFIRM_DELETE_PROGRAM = "Do you really want to delete the program ?";  // untranslated
Blockly.Msg.POPUP_CONFIRM_UPDATE_FIRMWARE = "There is a new firmware version for your robot available. You can try to run programs with the old version, but best bet is to update your robot now! You just have to click >>Update now<< and restart the robots system afterwards.";  // untranslated
Blockly.Msg.POPUP_DO_UPDATE_FIRMWARE = "Update now";  // untranslated
Blockly.Msg.POPUP_EMAIL = "E-Mail";  // untranslated
Blockly.Msg.POPUP_HIDE_STARTUP_MESSAGE = "I got it!";  // untranslated
Blockly.Msg.POPUP_NAME = "Name";  // untranslated
Blockly.Msg.POPUP_PASSWORD = "Password";  // untranslated
Blockly.Msg.POPUP_RELEASE = "Version beta 1.3.2 <ul class='NonIcon' style='font-size:small'><li>Fix timestamp bug for save program</li></ul>Version beta 1.3.1 <ul class='NonIcon' style='font-size:small'><li>Spanish available now!</li><li>Fixed bugs</li></ul>Version beta 1.3.0 <ul class='NonIcon' style='font-size:small'><li>Simulate a robot!</li><li>Share your program with a friend</li><li>Update the robots firmware Over-the-Air</li><li>USB cabel support for Chromebooks</li><li>Fixed many more bugs</li></ul></br>";  // untranslated
Blockly.Msg.POPUP_REPEAT_PASSWORD = "Repeat password";  // untranslated
Blockly.Msg.POPUP_ROBOT_BATTERY = "Voltage";  // untranslated
Blockly.Msg.POPUP_ROBOT_BUSY = "Your robot is busy. Please wait until the current program has finished.";  // untranslated
Blockly.Msg.POPUP_ROBOT_NAME = "Name";  // untranslated
Blockly.Msg.POPUP_ROBOT_NOT_CONNECTED = "You have to make a connection to your robot first.";  // untranslated
Blockly.Msg.POPUP_ROBOT_STATE = "State";  // untranslated
Blockly.Msg.POPUP_ROBOT_STATE_BUSY = "busy";  // untranslated
Blockly.Msg.POPUP_ROBOT_STATE_DISCONNECTED = "disconnected";  // untranslated
Blockly.Msg.POPUP_ROBOT_STATE_WAIT = "wait";  // untranslated
Blockly.Msg.POPUP_ROBOT_WAIT = "Waiting time";  // untranslated
Blockly.Msg.POPUP_SHARE_READ = "READ";  // untranslated
Blockly.Msg.POPUP_SHARE_WITH = "Share with ...";  // untranslated
Blockly.Msg.POPUP_SHARE_WRITE = "WRITE";  // untranslated
Blockly.Msg.POPUP_TEXT_STARTUP_MESSAGE = "Three things you should know before starting:<ul class='icon'><li class='document-text'>Here you can program real EV3 robots </li><li class='Roberta'>Your robot needs a special system <a target='_blank' href='https://mp-devel.iais.fraunhofer.de/wiki/x/RIAd'>check!</a></li><li class='wi-fi'>Your robot needs wi-fi or a USB program <a target='_blank' href='https://mp-devel.iais.fraunhofer.de/wiki/x/RIAd'>check!</a></li><li class='arrow-right-thick'>If you are not sure, please have a look at the help pages ... <a target='_blank' href='https://mp-devel.iais.fraunhofer.de/wiki/x/A4AM'>more</a></li></ul><br /><p>What is new?</p>";  // untranslated
Blockly.Msg.POPUP_USERNAME = "Username";  // untranslated
Blockly.Msg.POPUP_USERNAME_LOGOFF = "You are not logged in.";  // untranslated
Blockly.Msg.POPUP_VALUE = "Value";  // untranslated
Blockly.Msg.PROCEDURES_ALLOW_STATEMENTS = "permitir declaraciones";
Blockly.Msg.PROCEDURES_BEFORE_PARAMS = "con:";
Blockly.Msg.PROCEDURES_CALLNORETURN_HELPURL = "https://es.wikipedia.org/wiki/Subrutina";
Blockly.Msg.PROCEDURES_CALLNORETURN_TOOLTIP = "Ejecuta la función definida por el usuario '%1'.";
Blockly.Msg.PROCEDURES_CALLRETURN_HELPURL = "https://es.wikipedia.org/wiki/Subrutina";
Blockly.Msg.PROCEDURES_CALLRETURN_TOOLTIP = "Ejecuta la función definida por el usuario '%1' y usa su salida.";
Blockly.Msg.PROCEDURES_CALL_BEFORE_PARAMS = "con:";
Blockly.Msg.PROCEDURES_CREATE_DO = "Crear '%1'";
Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT = "Describe esta función...";
Blockly.Msg.PROCEDURES_DEFNORETURN_DO = "";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE = "hacer algo";
Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE = "para";
Blockly.Msg.PROCEDURES_DEFNORETURN_TOOLTIP = "Crea una función sin salida.";
Blockly.Msg.PROCEDURES_DEFRETURN_HELPURL = "https://en.wikipedia.org/wiki/Procedure_%28computer_science%29";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_RETURN = "devuelve";
Blockly.Msg.PROCEDURES_DEFRETURN_TOOLTIP = "Crea una función con una salida.";
Blockly.Msg.PROCEDURES_DEF_DUPLICATE_WARNING = "Advertencia: Esta función tiene parámetros duplicados.";
Blockly.Msg.PROCEDURES_HIGHLIGHT_DEF = "Destacar definición de la función";
Blockly.Msg.PROCEDURES_IFRETURN_HELPURL = "http://c2.com/cgi/wiki?GuardClause";  // untranslated
Blockly.Msg.PROCEDURES_IFRETURN_TOOLTIP = "Si un valor es verdadero, entonces devuelve un segundo valor.";
Blockly.Msg.PROCEDURES_IFRETURN_WARNING = "Advertencia: Este bloque solo puede ser utilizado dentro de la definición de una función.";
Blockly.Msg.PROCEDURES_MUTATORARG_TITLE = "nombre de entrada:";
Blockly.Msg.PROCEDURES_MUTATORARG_TOOLTIP = "Añadir una entrada a la función.";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TITLE = "entradas";
Blockly.Msg.PROCEDURES_MUTATORCONTAINER_TOOLTIP = "Añadir, eliminar o reordenar entradas para esta función.";
Blockly.Msg.PROCEDURES_TITLE = "' procedure";  // untranslated
Blockly.Msg.PROCEDURES_VARIABLES_ERROR = "Error: This block may be used only within the '";  // untranslated
Blockly.Msg.PROCEDURES_VARIABLES_LOOP_ERROR = "Error: This block may be used only within a loop which delcares ";  // untranslated
Blockly.Msg.RECIVED_DATA = "data recived";  // untranslated
Blockly.Msg.REMOVE_COMMENT = "Eliminar comentario";
Blockly.Msg.RENAME_VARIABLE = "Renombrar la variable…";
Blockly.Msg.RENAME_VARIABLE_TITLE = "Renombrar todas las variables «%1» a:";
Blockly.Msg.SEND_DATA = "data to send";  // untranslated
Blockly.Msg.SENSOR_COLOUR = "colour sensor";  // untranslated
Blockly.Msg.SENSOR_ENCODER = "encoder";  // untranslated
Blockly.Msg.SENSOR_GET_MODE = "get mode";  // untranslated
Blockly.Msg.SENSOR_GET_SAMPLE = "get value";  // untranslated
Blockly.Msg.SENSOR_GET_SAMPLE_HELP = "The help text will appear here";  // untranslated
Blockly.Msg.SENSOR_GYRO = "gyroscope";  // untranslated
Blockly.Msg.SENSOR_INFRARED = "infrared sensor";  // untranslated
Blockly.Msg.SENSOR_IS_PRESSED = "pressed?";  // untranslated
Blockly.Msg.SENSOR_KEY = "button";  // untranslated
Blockly.Msg.SENSOR_KEY_ANY = "any";  // untranslated
Blockly.Msg.SENSOR_KEY_DOWN = "down";  // untranslated
Blockly.Msg.SENSOR_KEY_ENTER = "enter";  // untranslated
Blockly.Msg.SENSOR_KEY_ESCAPE = "escape";  // untranslated
Blockly.Msg.SENSOR_KEY_LEFT = "left";  // untranslated
Blockly.Msg.SENSOR_KEY_RIGHT = "right";  // untranslated
Blockly.Msg.SENSOR_KEY_UP = "up";  // untranslated
Blockly.Msg.SENSOR_MS_TIMER = "in ms";  // untranslated
Blockly.Msg.SENSOR_PRESSED = " (pressed)";  // untranslated
Blockly.Msg.SENSOR_RESET = "reset";  // untranslated
Blockly.Msg.SENSOR_RESET_II = "";  // untranslated
Blockly.Msg.SENSOR_SET_MODE = "set mode";  // untranslated
Blockly.Msg.SENSOR_TIME = "time";  // untranslated
Blockly.Msg.SENSOR_TIMER = "timer";  // untranslated
Blockly.Msg.SENSOR_TOUCH = "touch sensor";  // untranslated
Blockly.Msg.SENSOR_ULTRASONIC = "ultrasonic sensor";  // untranslated
Blockly.Msg.SENSOR_WAIT_PRESSED = "pressed";  // untranslated
Blockly.Msg.SENSOR_WAIT_PRESSED_RELEASED = "pressed or released";  // untranslated
Blockly.Msg.SET = "set";  // untranslated
Blockly.Msg.START = "start";  // untranslated
Blockly.Msg.START_ACTIVITY = "activity";  // untranslated
Blockly.Msg.START_ACTIVITY_TOOLTIP = "Starts additional activity.";  // untranslated
Blockly.Msg.START_HELP = "With this as a first block starts your program. All the other blocks that are connected are processed sequentially. <br />Additionally, you can add variables by clicking on the plus. All variables that are »declared« here are global. Values can be stored in the variables and later used in the program.";  // untranslated
Blockly.Msg.START_PROGRAM = "program-start";  // untranslated
Blockly.Msg.START_TOOLTIP = "The starting point for the main program.";  // untranslated
Blockly.Msg.TAB_CONFIGURATION = "Robot configuration";  // untranslated
Blockly.Msg.TAB_PROGRAM = "Program";  // untranslated
Blockly.Msg.TAB_SIMULATION = "Simulation";  // untranslated
Blockly.Msg.TEXT_APPEND_APPENDTEXT = "añadir texto";
Blockly.Msg.TEXT_APPEND_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_APPEND_TO = "a";
Blockly.Msg.TEXT_APPEND_TOOLTIP = "Añadir texto a la variable '%1'.";
Blockly.Msg.TEXT_CHANGECASE_HELPURL = "https://github.com/google/blockly/wiki/Text#adjusting-text-case";  // untranslated
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_LOWERCASE = "a minúsculas";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_TITLECASE = "a Mayúsculas Cada Palabra";
Blockly.Msg.TEXT_CHANGECASE_OPERATOR_UPPERCASE = "a MAYÚSCULAS";
Blockly.Msg.TEXT_CHANGECASE_TOOLTIP = "Devuelve una copia del texto en un caso diferente.";
Blockly.Msg.TEXT_CHARAT_FIRST = "obtener la primera letra";
Blockly.Msg.TEXT_CHARAT_FROM_END = "obtener la letra # del final";
Blockly.Msg.TEXT_CHARAT_FROM_START = "obtener la letra #";
Blockly.Msg.TEXT_CHARAT_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-text";  // untranslated
Blockly.Msg.TEXT_CHARAT_INPUT_INTEXT = "en el texto";
Blockly.Msg.TEXT_CHARAT_LAST = "obtener la última letra";
Blockly.Msg.TEXT_CHARAT_RANDOM = "obtener letra aleatoria";
Blockly.Msg.TEXT_CHARAT_TAIL = "";  // untranslated
Blockly.Msg.TEXT_CHARAT_TOOLTIP = "Devuelve la letra en la posición especificada.";
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TOOLTIP = "Agregar un elemento al texto.";
Blockly.Msg.TEXT_CREATE_JOIN_TITLE_JOIN = "unir";
Blockly.Msg.TEXT_CREATE_JOIN_TOOLTIP = "Agregar, eliminar o reordenar las secciones para reconfigurar este bloque de texto.";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_END = "hasta la letra # del final";
Blockly.Msg.TEXT_GET_SUBSTRING_END_FROM_START = "hasta la letra #";
Blockly.Msg.TEXT_GET_SUBSTRING_END_LAST = "hasta la última letra";
Blockly.Msg.TEXT_GET_SUBSTRING_HELPURL = "https://github.com/google/blockly/wiki/Text#extracting-a-region-of-text";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_INPUT_IN_TEXT = "en el texto";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FIRST = "obtener subcadena desde la primera letra";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_END = "obtener subcadena desde la letra # del final";
Blockly.Msg.TEXT_GET_SUBSTRING_START_FROM_START = "obtener subcadena desde la letra #";
Blockly.Msg.TEXT_GET_SUBSTRING_TAIL = "";  // untranslated
Blockly.Msg.TEXT_GET_SUBSTRING_TOOLTIP = "Devuelve una porción determinada del texto.";
Blockly.Msg.TEXT_INDEXOF_HELPURL = "https://github.com/google/blockly/wiki/Text#finding-text";  // untranslated
Blockly.Msg.TEXT_INDEXOF_INPUT_INTEXT = "en el texto";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_FIRST = "encontrar la primera aparición del texto";
Blockly.Msg.TEXT_INDEXOF_OPERATOR_LAST = "encontrar la última aparición del texto";
Blockly.Msg.TEXT_INDEXOF_TAIL = "";  // untranslated
Blockly.Msg.TEXT_INDEXOF_TOOLTIP = "Devuelve el índice de la primera/última aparición del primer texto en el segundo texto. Devuelve 0 si el texto no se encuentra.";
Blockly.Msg.TEXT_ISEMPTY_HELPURL = "https://github.com/google/blockly/wiki/Text#checking-for-empty-text";  // untranslated
Blockly.Msg.TEXT_ISEMPTY_TITLE = "%1 está vacío";
Blockly.Msg.TEXT_ISEMPTY_TOOLTIP = "Devuelve verdadero si el texto proporcionado está vacío.";
Blockly.Msg.TEXT_JOIN_HELPURL = "https://github.com/google/blockly/wiki/Text#text-creation";  // untranslated
Blockly.Msg.TEXT_JOIN_TITLE_CREATEWITH = "crear texto con";
Blockly.Msg.TEXT_JOIN_TOOLTIP = "Crear un fragmento de texto al unir cualquier número de elementos.";
Blockly.Msg.TEXT_LENGTH_HELPURL = "https://github.com/google/blockly/wiki/Text#text-modification";  // untranslated
Blockly.Msg.TEXT_LENGTH_TITLE = "longitud de %1";
Blockly.Msg.TEXT_LENGTH_TOOLTIP = "Devuelve el número de letras (incluyendo espacios) en el texto proporcionado.";
Blockly.Msg.TEXT_PRINT_HELPURL = "https://github.com/google/blockly/wiki/Text#printing-text";  // untranslated
Blockly.Msg.TEXT_PRINT_TITLE = "imprimir %1";
Blockly.Msg.TEXT_PRINT_TOOLTIP = "Imprimir el texto, número u otro valor especificado.";
Blockly.Msg.TEXT_PROMPT_HELPURL = "https://github.com/google/blockly/wiki/Text#getting-input-from-the-user";  // untranslated
Blockly.Msg.TEXT_PROMPT_TOOLTIP_NUMBER = "Solicitar al usuario un número.";
Blockly.Msg.TEXT_PROMPT_TOOLTIP_TEXT = "Solicitar al usuario un texto.";
Blockly.Msg.TEXT_PROMPT_TYPE_NUMBER = "solicitar número con el mensaje";
Blockly.Msg.TEXT_PROMPT_TYPE_TEXT = "solicitar texto con el mensaje";
Blockly.Msg.TEXT_TEXT_HELPURL = "https://es.wikipedia.org/wiki/Cadena_de_caracteres";
Blockly.Msg.TEXT_TEXT_TOOLTIP = "Una letra, palabra o línea de texto.";
Blockly.Msg.TEXT_TRIM_HELPURL = "https://github.com/google/blockly/wiki/Text#trimming-removing-spaces";  // untranslated
Blockly.Msg.TEXT_TRIM_OPERATOR_BOTH = "quitar espacios de ambos lados de";
Blockly.Msg.TEXT_TRIM_OPERATOR_LEFT = "quitar espacios iniciales de";
Blockly.Msg.TEXT_TRIM_OPERATOR_RIGHT = "quitar espacios finales de";
Blockly.Msg.TEXT_TRIM_TOOLTIP = "Devuelve una copia del texto sin los espacios de uno o ambos extremos.";
Blockly.Msg.TIMER_GETSAMPLE_TOOLTIP = "Gets the current reading from the timer.";  // untranslated
Blockly.Msg.TIMER_RESET_TOOLTIP = "Resets the timer.";  // untranslated
Blockly.Msg.TODAY = "Hoy";
Blockly.Msg.TOOLBOX_ACTION = "Action";  // untranslated
Blockly.Msg.TOOLBOX_COLOUR = "Colours";  // untranslated
Blockly.Msg.TOOLBOX_COMMUNICATION = "Messages";  // untranslated
Blockly.Msg.TOOLBOX_CONTROL = "Control";  // untranslated
Blockly.Msg.TOOLBOX_DECISION = "Decisions";  // untranslated
Blockly.Msg.TOOLBOX_DISPLAY = "Display";  // untranslated
Blockly.Msg.TOOLBOX_DRIVE = "Drive";  // untranslated
Blockly.Msg.TOOLBOX_GLOBAL_VARIABLE = "Global Variables";  // untranslated
Blockly.Msg.TOOLBOX_LIGHT = "Lights";  // untranslated
Blockly.Msg.TOOLBOX_LIST = "Lists";  // untranslated
Blockly.Msg.TOOLBOX_LOGIC = "Logic";  // untranslated
Blockly.Msg.TOOLBOX_LOOP = "Loops";  // untranslated
Blockly.Msg.TOOLBOX_LOOP_VARIABLE = "Loop Variables";  // untranslated
Blockly.Msg.TOOLBOX_MATH = "Math";  // untranslated
Blockly.Msg.TOOLBOX_MOVE = "Move";  // untranslated
Blockly.Msg.TOOLBOX_PROCEDURE = "Functions";  // untranslated
Blockly.Msg.TOOLBOX_SENSOR = "Sensors";  // untranslated
Blockly.Msg.TOOLBOX_SOUND = "Sounds";  // untranslated
Blockly.Msg.TOOLBOX_TEXT = "Text";  // untranslated
Blockly.Msg.TOOLBOX_VARIABLE = "Variables";  // untranslated
Blockly.Msg.TOOLBOX_WAIT = "Wait";  // untranslated
Blockly.Msg.TOUCH_HELP = "The touch sensor detects whether the red part of the sensor is pressed or not. He is particularly well suited as a switch or for a bumper car (robot).";  // untranslated
Blockly.Msg.TOUCH_HELPURL = "https://mp-devel.iais.fraunhofer.de/wiki/x/CwA-/";  // untranslated
Blockly.Msg.TOUCH_ISPRESSED_TOOLTIP = "Is the touch sensor pressed?";  // untranslated
Blockly.Msg.TOUCH_TOOLTIP = "Is the touch sensor pressed?";  // untranslated
Blockly.Msg.ULTRASONIC_GETMODE_TOOLTIP = "Gets the mode of the ultrasonic sensor.";  // untranslated
Blockly.Msg.ULTRASONIC_GETSAMPLE_TOOLTIP = "Gets the current reading from the ultrasonic sensor.";  // untranslated
Blockly.Msg.ULTRASONIC_HELP = "The brains of your robot;-) <br> You can plug in sensors to the sensor ports 1 - 4 and motors to the motor ports A - D. Wheel diameter and track width are important so that the robot is properly controlled with all »driving« blocks.";  // untranslated
Blockly.Msg.ULTRASONIC_HELPURL = "https://mp-devel.iais.fraunhofer.de/wiki/x/CwA-/";  // untranslated
Blockly.Msg.ULTRASONIC_SETMODE_TOOLTIP = "Sets the mode of the ultrasonic sensor.";  // untranslated
Blockly.Msg.ULTRASONIC_TOOLTIP = "Represents EV3 ultrasonic sensor.";  // untranslated
Blockly.Msg.USED_CONNECTION = "via connection";  // untranslated
Blockly.Msg.VARIABLES_CREATE_TITLE = "Create";  // untranslated
Blockly.Msg.VARIABLES_CREATE_WITH = "with";  // untranslated
Blockly.Msg.VARIABLES_DEFAULT_NAME = "elemento";
Blockly.Msg.VARIABLES_GET_CREATE_SET = "Crear 'establecer %1'";
Blockly.Msg.VARIABLES_GET_HELPURL = "https://code.google.com/p/blockly/wiki/Variables#Get";  // untranslated
Blockly.Msg.VARIABLES_GET_TAIL = "";  // untranslated
Blockly.Msg.VARIABLES_GET_TITLE = "get";  // untranslated
Blockly.Msg.VARIABLES_GET_TOOLTIP = "Devuelve el valor de esta variable.";
Blockly.Msg.VARIABLES_GLOBAL_DECLARE_TOOLTIP = "Declares a global variable.";  // untranslated
Blockly.Msg.VARIABLES_LOCAL_DECLARE_TOOLTIP = "Declares a local variable.";  // untranslated
Blockly.Msg.VARIABLES_SET = "establecer %1 a %2";
Blockly.Msg.VARIABLES_SET_CREATE_GET = "Crear 'obtener %1'";
Blockly.Msg.VARIABLES_SET_HELPURL = "https://github.com/google/blockly/wiki/Variables#set";  // untranslated
Blockly.Msg.VARIABLES_SET_TOOLTIP = "Establece esta variable para que sea igual a la entrada.";
Blockly.Msg.VARIABLES_TITLE = "variable";  // untranslated
Blockly.Msg.VARIABLES_TYPE_ARRAY_BOOLEAN = "List Boolean";  // untranslated
Blockly.Msg.VARIABLES_TYPE_ARRAY_COLOUR = "List Colour";  // untranslated
Blockly.Msg.VARIABLES_TYPE_ARRAY_CONNECTION = "List Connection";  // untranslated
Blockly.Msg.VARIABLES_TYPE_ARRAY_NUMBER = "List Number";  // untranslated
Blockly.Msg.VARIABLES_TYPE_ARRAY_STRING = "List String";  // untranslated
Blockly.Msg.VARIABLES_TYPE_BOOLEAN = "Boolean";  // untranslated
Blockly.Msg.VARIABLES_TYPE_COLOUR = "Colour";  // untranslated
Blockly.Msg.VARIABLES_TYPE_CONNECTION = "Connection";  // untranslated
Blockly.Msg.VARIABLES_TYPE_NUMBER = "Number";  // untranslated
Blockly.Msg.VARIABLES_TYPE_STRING = "String";  // untranslated
Blockly.Msg.VARIABLE_GLOBAL_HELP = "With this block you can declare a global variable. In a global variable you can store values, that you would like to access somewhere in your program later. You can <ul class='NonIcon'><li>modify the name of the variable</li><li>choose the right type of the variable</li><li>set the initial value</li></ul>";  // untranslated
Blockly.Msg.WAIT = "wait";  // untranslated
Blockly.Msg.WAIT_FOREVER = "indefinitely";  // untranslated
Blockly.Msg.WAIT_FOR_CONNECTION = "wait for connection";  // untranslated
Blockly.Msg.WAIT_FOR_HELP = "here comes your help text";  // untranslated
Blockly.Msg.WAIT_FOR_TOOLTIP = "Waits for sensor values.";  // untranslated
Blockly.Msg.WAIT_OR = "or wait for";  // untranslated
Blockly.Msg.WAIT_TOOLTIP = "Waits for a condition becoming true.";  // untranslated
Blockly.Msg.WAIT_UNTIL = "wait until";  // untranslated
Blockly.Msg.YES = "yes";  // untranslated
Blockly.Msg.PROCEDURES_DEFRETURN_TITLE = Blockly.Msg.PROCEDURES_DEFNORETURN_TITLE;
Blockly.Msg.CONTROLS_IF_IF_TITLE_IF = Blockly.Msg.CONTROLS_IF_MSG_IF;
Blockly.Msg.CONTROLS_WHILEUNTIL_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_MSG_THEN = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.CONTROLS_IF_ELSE_TITLE_ELSE = Blockly.Msg.CONTROLS_IF_MSG_ELSE;
Blockly.Msg.PROCEDURES_DEFRETURN_PROCEDURE = Blockly.Msg.PROCEDURES_DEFNORETURN_PROCEDURE;
Blockly.Msg.LISTS_GET_SUBLIST_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.VARIABLES_GET_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.MATH_CHANGE_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.PROCEDURES_DEFRETURN_DO = Blockly.Msg.PROCEDURES_DEFNORETURN_DO;
Blockly.Msg.CONTROLS_IF_ELSEIF_TITLE_ELSEIF = Blockly.Msg.CONTROLS_IF_MSG_ELSEIF;
Blockly.Msg.LISTS_GET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOREACH_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_SET_INDEX_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.CONTROLS_FOR_INPUT_DO = Blockly.Msg.CONTROLS_REPEAT_INPUT_DO;
Blockly.Msg.LISTS_CREATE_WITH_ITEM_TITLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_APPEND_VARIABLE = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.TEXT_CREATE_JOIN_ITEM_TITLE_ITEM = Blockly.Msg.VARIABLES_DEFAULT_NAME;
Blockly.Msg.LISTS_INDEX_OF_INPUT_IN_LIST = Blockly.Msg.LISTS_INLIST;
Blockly.Msg.PROCEDURES_DEFRETURN_COMMENT = Blockly.Msg.PROCEDURES_DEFNORETURN_COMMENT;
Blockly.Msg.LISTS_GET_INDEX_HELPURL = Blockly.Msg.LISTS_INDEX_OF_HELPURL;